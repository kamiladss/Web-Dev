{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CompaniesService {\n  constructor(CompanyClient) {\n    this.CompanyClient = CompanyClient;\n    this.BASE_URL = \"http://127.0.0.1:8000/\";\n  }\n  /*CRUD ON COMPANY*/\n  createCompany(company) {\n    return this.CompanyClient.post(`${this.BASE_URL}api/companies/`, company);\n  }\n  getCompanies() {\n    return this.CompanyClient.get(`${this.BASE_URL}api/companies/`);\n  }\n  getCompany(id) {\n    return this.CompanyClient.get(`${this.BASE_URL}api/companies/${id}/`);\n  }\n  updateCompany(id, name, city, address, description) {\n    const patchData = {\n      name,\n      city,\n      address,\n      description\n    };\n    return this.CompanyClient.put(`${this.BASE_URL}api/companies/${id}/`, patchData);\n  }\n  deleteCompany(id) {\n    return this.CompanyClient.delete(`${this.BASE_URL}api/companies/${id}/`);\n  }\n}\nCompaniesService.ɵfac = function CompaniesService_Factory(t) {\n  return new (t || CompaniesService)(i0.ɵɵinject(i1.HttpClient));\n};\nCompaniesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CompaniesService,\n  factory: CompaniesService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,gBAAgB;EAG3BC,YAAoBC,aAAyB;IAAzB,kBAAa,GAAbA,aAAa;IAFjC,aAAQ,GAAG,wBAAwB;EAGnC;EAEA;EAEAC,aAAa,CAACC,OAA6E;IACzF,OAAO,IAAI,CAACF,aAAa,CAACG,IAAI,CAAY,GAAG,IAAI,CAACC,QAAQ,gBAAgB,EAAEF,OAAO,CAAC;EACtF;EAEAG,YAAY;IACV,OAAO,IAAI,CAACL,aAAa,CAACM,GAAG,CAAY,GAAG,IAAI,CAACF,QAAQ,gBAAgB,CAAC;EAC5E;EAEAG,UAAU,CAACC,EAAO;IAChB,OAAO,IAAI,CAACR,aAAa,CAACM,GAAG,CAAU,GAAG,IAAI,CAACF,QAAQ,iBAAiBI,EAAE,GAAG,CAAC;EAChF;EAEAC,aAAa,CAACD,EAAU,EAAEE,IAAY,EAAEC,IAAY,EAAEC,OAAe,EAAEC,WAAmB;IACxF,MAAMC,SAAS,GAAG;MAACJ,IAAI;MAAEC,IAAI;MAAEC,OAAO;MAAEC;IAAW,CAAC;IACpD,OAAO,IAAI,CAACb,aAAa,CAACe,GAAG,CAAC,GAAG,IAAI,CAACX,QAAQ,iBAAiBI,EAAE,GAAG,EAAEM,SAAS,CAAC;EAClF;EAGAE,aAAa,CAACR,EAAU;IACtB,OAAO,IAAI,CAACR,aAAa,CAACiB,MAAM,CAAC,GAAG,IAAI,CAACb,QAAQ,iBAAiBI,EAAE,GAAG,CAAC;EAC1E;;AA5BWV,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAoB,SAAhBpB,gBAAgB;EAAAqB,YAFf;AAAM","names":["CompaniesService","constructor","CompanyClient","createCompany","company","post","BASE_URL","getCompanies","get","getCompany","id","updateCompany","name","city","address","description","patchData","put","deleteCompany","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Lenovo\\Documents\\GitHub\\Web-Dev\\lab 10\\hh_front\\src\\app\\services\\companies.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {Company} from \"../models/models\";\r\nimport {Observable} from \"rxjs\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CompaniesService {\r\n  BASE_URL = \"http://127.0.0.1:8000/\"\r\n\r\n  constructor(private CompanyClient: HttpClient) {\r\n  }\r\n\r\n  /*CRUD ON COMPANY*/\r\n\r\n  createCompany(company: { name: string, description: string, city: string, address: string }): Observable<Company[]> {\r\n    return this.CompanyClient.post<Company[]>(`${this.BASE_URL}api/companies/`, company);\r\n  }\r\n\r\n  getCompanies(): Observable<Company[]> {\r\n    return this.CompanyClient.get<Company[]>(`${this.BASE_URL}api/companies/`);\r\n  }\r\n\r\n  getCompany(id: any): Observable<Company> {\r\n    return this.CompanyClient.get<Company>(`${this.BASE_URL}api/companies/${id}/`)\r\n  }\r\n\r\n  updateCompany(id: number, name: string, city: string, address: string, description: string): Observable<any> {\r\n    const patchData = {name, city, address, description};\r\n    return this.CompanyClient.put(`${this.BASE_URL}api/companies/${id}/`, patchData)\r\n  }\r\n\r\n\r\n  deleteCompany(id: number) {\r\n    return this.CompanyClient.delete(`${this.BASE_URL}api/companies/${id}/`);\r\n  }\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}